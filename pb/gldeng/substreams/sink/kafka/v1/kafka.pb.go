// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: gldeng/substreams/sink/kafka/v1/kafka.proto

package pbkafka

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Messages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Messages) Reset() {
	*x = Messages{}
	mi := &file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Messages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Messages) ProtoMessage() {}

func (x *Messages) ProtoReflect() protoreflect.Message {
	mi := &file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Messages.ProtoReflect.Descriptor instead.
func (*Messages) Descriptor() ([]byte, []int) {
	return file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *Messages) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	SchemaId      int32                  `protobuf:"varint,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Key           []byte                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetSchemaId() int32 {
	if x != nil {
		return x.SchemaId
	}
	return 0
}

func (x *Message) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Message) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_gldeng_substreams_sink_kafka_v1_kafka_proto protoreflect.FileDescriptor

var file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x67, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x2f, 0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x67,
	0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x22, 0x50,
	0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x64, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0xaf, 0x02, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2d, 0x73, 0x69, 0x6e, 0x6b, 0x2d,
	0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70,
	0x62, 0x2f, 0x67, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x2f, 0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2f, 0x76,
	0x31, 0x3b, 0x70, 0x62, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0xa2, 0x02, 0x04, 0x47, 0x53, 0x53, 0x4b,
	0xaa, 0x02, 0x1f, 0x47, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x6b, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x1f, 0x47, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x5c, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x5c, 0x53, 0x69, 0x6e, 0x6b, 0x5c, 0x4b, 0x61, 0x66, 0x6b,
	0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2b, 0x47, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x5c, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x5c, 0x53, 0x69, 0x6e, 0x6b, 0x5c, 0x4b, 0x61,
	0x66, 0x6b, 0x61, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x23, 0x47, 0x6c, 0x64, 0x65, 0x6e, 0x67, 0x3a, 0x3a, 0x53, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x3a, 0x3a, 0x53, 0x69, 0x6e, 0x6b, 0x3a, 0x3a, 0x4b,
	0x61, 0x66, 0x6b, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescOnce sync.Once
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescData = file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDesc
)

func file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP() []byte {
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescOnce.Do(func() {
		file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescData)
	})
	return file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDescData
}

var file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gldeng_substreams_sink_kafka_v1_kafka_proto_goTypes = []any{
	(*Messages)(nil), // 0: gldeng.substreams.sink.kafka.v1.Messages
	(*Message)(nil),  // 1: gldeng.substreams.sink.kafka.v1.Message
}
var file_gldeng_substreams_sink_kafka_v1_kafka_proto_depIdxs = []int32{
	1, // 0: gldeng.substreams.sink.kafka.v1.Messages.messages:type_name -> gldeng.substreams.sink.kafka.v1.Message
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gldeng_substreams_sink_kafka_v1_kafka_proto_init() }
func file_gldeng_substreams_sink_kafka_v1_kafka_proto_init() {
	if File_gldeng_substreams_sink_kafka_v1_kafka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gldeng_substreams_sink_kafka_v1_kafka_proto_goTypes,
		DependencyIndexes: file_gldeng_substreams_sink_kafka_v1_kafka_proto_depIdxs,
		MessageInfos:      file_gldeng_substreams_sink_kafka_v1_kafka_proto_msgTypes,
	}.Build()
	File_gldeng_substreams_sink_kafka_v1_kafka_proto = out.File
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_rawDesc = nil
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_goTypes = nil
	file_gldeng_substreams_sink_kafka_v1_kafka_proto_depIdxs = nil
}
